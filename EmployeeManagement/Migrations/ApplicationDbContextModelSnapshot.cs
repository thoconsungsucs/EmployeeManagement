// <auto-generated />
using EmployeeManagement.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            Name = "Hanoi"
                        },
                        new
                        {
                            CityId = 2,
                            Name = "Ho Chi Minh"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrictId");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            DistrictId = 1,
                            CityId = 1,
                            Name = "Dong Da"
                        },
                        new
                        {
                            DistrictId = 2,
                            CityId = 1,
                            Name = "Cau Giay"
                        },
                        new
                        {
                            DistrictId = 3,
                            CityId = 2,
                            Name = "Tan Binh"
                        },
                        new
                        {
                            DistrictId = 4,
                            CityId = 2,
                            Name = "Binh Thanh"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.Ward", b =>
                {
                    b.Property<int>("WardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WardId"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WardId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Wards");

                    b.HasData(
                        new
                        {
                            WardId = 1,
                            DistrictId = 1,
                            Name = "Quan Thanh"
                        },
                        new
                        {
                            WardId = 2,
                            DistrictId = 1,
                            Name = "Cat Linh"
                        },
                        new
                        {
                            WardId = 3,
                            DistrictId = 2,
                            Name = "Nghia Do"
                        },
                        new
                        {
                            WardId = 4,
                            DistrictId = 2,
                            Name = "Nghia Tan"
                        },
                        new
                        {
                            WardId = 5,
                            DistrictId = 3,
                            Name = "Tan Dinh"
                        },
                        new
                        {
                            WardId = 6,
                            DistrictId = 3,
                            Name = "Tan Thanh"
                        },
                        new
                        {
                            WardId = 7,
                            DistrictId = 4,
                            Name = "Binh Thanh"
                        },
                        new
                        {
                            WardId = 8,
                            DistrictId = 4,
                            Name = "Binh Loi"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.District", b =>
                {
                    b.HasOne("EmployeeManagement.Models.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("EmployeeManagement.Models.Ward", b =>
                {
                    b.HasOne("EmployeeManagement.Models.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("EmployeeManagement.Models.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("EmployeeManagement.Models.District", b =>
                {
                    b.Navigation("Wards");
                });
#pragma warning restore 612, 618
        }
    }
}
